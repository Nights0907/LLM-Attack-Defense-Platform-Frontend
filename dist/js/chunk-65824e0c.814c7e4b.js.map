{"version":3,"sources":["webpack:///./src/views/Manage.vue?e164","webpack:///./src/api/index.js","webpack:///./src/views/Manage.vue","webpack:///src/views/Manage.vue","webpack:///./src/views/Manage.vue?67b6","webpack:///./src/views/Manage.vue?16cc"],"names":["api","log","axios","post","user","login","data","register","attack","executeAttack","streamAttack","url","method","addAttackMethod","updateAttackMethod","put","deleteAttackMethod","delete","params","getAllMethods","get","getHistory","getHistoryDetail","defense","addDefenseMethod","updateDefenseMethod","deleteDefenseMethod","model","getAllModels","getModelByName","render","_vm","this","_c","_self","staticClass","attrs","value","activeTab","callback","$$v","expression","slot","_v","staticStyle","on","showAddModelDialog","models","scopedSlots","_u","key","fn","scope","_s","hideApiKey","row","api_key","$event","editModel","deleteModel","showAddAttackDialog","attackMethods","description","prompt","substring","editAttackMethod","showAddDefenseDialog","defenseMethods","editDefenseMethod","dialogType","modelDialogVisible","ref","modelForm","modelRules","model_name","$set","base_url","saveModel","attackDialogVisible","attackForm","attackRules","name","saveAttackMethod","defenseDialogVisible","defenseForm","defenseRules","saveDefenseMethod","staticRenderFns","oldAttackMethodName","oldDefenseMethodName","required","message","trigger","created","fetchModels","fetchAttackMethods","fetchDefenseMethods","methods","$store","dispatch","then","catch","error","console","$message","length","repeat","$refs","validate","valid","success","push","index","findIndex","m","splice","$confirm","confirmButtonText","cancelButtonText","type","formData","attack_method_name","attack_method_prompt","attack_method_description","old_attack_method_name","new_attack_method_name","new_attack_method_prompt","new_attack_method_description","apiCall","response","defense_method_name","defense_method_prompt","defense_method_description","old_defense_method_name","new_defense_method_name","new_defense_method_prompt","new_defense_method_description","component"],"mappings":"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","file":"js/chunk-65824e0c.814c7e4b.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=style&index=0&id=259a0be3&prod&scoped=true&lang=css\"","import axios from 'axios'\n\nconst api = {\n  // 日志相关\n  log: {\n    // 用户登录\n    log() {\n      return axios.post('/api/logs')\n    },\n  },\n  // 用户相关\n  user: {\n    // 用户登录\n    login(data) {\n      return axios.post('/api/users/login', data)\n    },\n    // 用户注册\n    register(data) {\n      return axios.post('/api/users/register', data)\n    }\n  },\n  \n  // 攻击相关\n  attack: {\n    // 执行攻击测试\n    executeAttack(data) {\n      return axios.post('/api/attack/execute', data)\n    },\n    // 执行流式攻击测试\n    streamAttack(data) {\n      return {\n        url: '/api/attack/execute/stream',\n        method: 'post',\n        data: data\n      }\n    },\n    // 添加攻击方法\n    addAttackMethod(data) {\n      return axios.post('/api/attack', data)\n    },\n    // 修改攻击方法\n    updateAttackMethod(data) {\n      return axios.put('/api/attack', data)\n    },\n    // 删除攻击方法\n    deleteAttackMethod(data) {\n      return axios.delete('/api/attack', { params: data })\n    },\n    // 获取所有攻击方法\n    getAllMethods() {\n      return axios.get('/api/attack/methods')\n    },\n    // 获取历史记录\n    getHistory(data) {\n      return axios.post('/api/history', data)\n    },\n    // 获取历史详情\n    getHistoryDetail(data) {\n      return axios.post('/api/history/details', data)\n    }\n  },\n  \n  // 防御相关\n  defense: {\n    // 添加防御方法\n    addDefenseMethod(data) {\n      return axios.post('/api/defense', data)\n    },\n    // 修改防御方法\n    updateDefenseMethod(data) {\n      return axios.put('/api/defense', data)\n    },\n    // 删除防御方法\n    deleteDefenseMethod(data) {\n      return axios.delete('/api/defense', { params: data })\n    },\n    // 获取所有防御方法\n    getAllMethods() {\n      return axios.get('/api/defense/methods')\n    }\n  },\n  \n  // 模型相关\n  model: {\n    // 获取所有模型\n    getAllModels() {\n      return axios.post('/api/models')\n    },\n    // 根据名称获取模型信息\n    getModelByName(data) {\n      return axios.post('/api/models/info', data)\n    }\n  }\n}\n\nexport default api ","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"manage-container\"},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":24}},[_c('el-tabs',{attrs:{\"type\":\"card\"},model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('el-tab-pane',{attrs:{\"label\":\"模型管理\",\"name\":\"models\"}},[_c('el-card',[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"模型列表\")]),_c('el-button',{staticStyle:{\"float\":\"right\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.showAddModelDialog}},[_vm._v(\"添加模型\")])],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.models}},[_c('el-table-column',{attrs:{\"prop\":\"model_name\",\"label\":\"模型名称\",\"width\":\"240\"}}),_c('el-table-column',{attrs:{\"prop\":\"base_url\",\"label\":\"API地址\"}}),_c('el-table-column',{attrs:{\"prop\":\"api_key\",\"label\":\"API密钥\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(_vm.hideApiKey(scope.row.api_key)))])]}}])}),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.editModel(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{staticStyle:{\"color\":\"#F56C6C\"},attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.deleteModel(scope.row)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"攻击方法管理\",\"name\":\"attack\"}},[_c('el-card',[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"攻击方法列表\")]),_c('el-button',{staticStyle:{\"float\":\"right\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.showAddAttackDialog}},[_vm._v(\"添加攻击方法\")])],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.attackMethods}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"攻击方法名称\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"攻击方法描述\",\"show-overflow-tooltip\":\"\",\"width\":\"320\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.description || '暂无描述'))])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"prompt\",\"label\":\"攻击提示词模板\",\"show-overflow-tooltip\":\"\",\"width\":\"300\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-popover',{attrs:{\"placement\":\"top-start\",\"width\":\"400\",\"trigger\":\"hover\"}},[_c('div',{staticStyle:{\"max-height\":\"300px\",\"overflow-y\":\"auto\"}},[_vm._v(_vm._s(scope.row.prompt || '暂无提示词'))]),_c('div',{staticClass:\"prompt-preview\",attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_vm._v(_vm._s(scope.row.prompt ? scope.row.prompt.substring(0, 50) + '...' : '暂无提示词'))])])]}}])}),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.editAttackMethod(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{staticStyle:{\"color\":\"#F56C6C\"},attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.deleteAttackMethod(scope.row)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"防御方法管理\",\"name\":\"defense\"}},[_c('el-card',[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"防御方法列表\")]),_c('el-button',{staticStyle:{\"float\":\"right\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.showAddDefenseDialog}},[_vm._v(\"添加防御方法\")])],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.defenseMethods}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"防御方法名称\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"防御方法描述\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.description || '暂无描述'))])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"prompt\",\"label\":\"防御提示词模板\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-popover',{attrs:{\"placement\":\"top-start\",\"width\":\"400\",\"trigger\":\"hover\"}},[_c('div',{staticStyle:{\"max-height\":\"300px\",\"overflow-y\":\"auto\"}},[_vm._v(_vm._s(scope.row.prompt || '暂无提示词'))]),_c('div',{staticClass:\"prompt-preview\",attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_vm._v(_vm._s(scope.row.prompt ? scope.row.prompt.substring(0, 50) + '...' : '暂无提示词'))])])]}}])}),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.editDefenseMethod(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{staticStyle:{\"color\":\"#F56C6C\"},attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.deleteDefenseMethod(scope.row)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.dialogType === 'add' ? '添加模型' : '编辑模型',\"visible\":_vm.modelDialogVisible},on:{\"update:visible\":function($event){_vm.modelDialogVisible=$event}}},[_c('el-form',{ref:\"modelForm\",attrs:{\"model\":_vm.modelForm,\"rules\":_vm.modelRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"模型名称\",\"prop\":\"model_name\"}},[_c('el-input',{model:{value:(_vm.modelForm.model_name),callback:function ($$v) {_vm.$set(_vm.modelForm, \"model_name\", $$v)},expression:\"modelForm.model_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"API地址\",\"prop\":\"base_url\"}},[_c('el-input',{model:{value:(_vm.modelForm.base_url),callback:function ($$v) {_vm.$set(_vm.modelForm, \"base_url\", $$v)},expression:\"modelForm.base_url\"}})],1),_c('el-form-item',{attrs:{\"label\":\"API密钥\",\"prop\":\"api_key\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"show-password\":\"\"},model:{value:(_vm.modelForm.api_key),callback:function ($$v) {_vm.$set(_vm.modelForm, \"api_key\", $$v)},expression:\"modelForm.api_key\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.modelDialogVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveModel}},[_vm._v(\"确定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.dialogType === 'add' ? '添加攻击方法' : '编辑攻击方法',\"visible\":_vm.attackDialogVisible},on:{\"update:visible\":function($event){_vm.attackDialogVisible=$event}}},[_c('el-form',{ref:\"attackForm\",attrs:{\"model\":_vm.attackForm,\"rules\":_vm.attackRules,\"label-width\":\"130px\"}},[_c('el-form-item',{attrs:{\"label\":\"攻击方法名称\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.attackForm.name),callback:function ($$v) {_vm.$set(_vm.attackForm, \"name\", $$v)},expression:\"attackForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"攻击方法描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":3},model:{value:(_vm.attackForm.description),callback:function ($$v) {_vm.$set(_vm.attackForm, \"description\", $$v)},expression:\"attackForm.description\"}})],1),_c('el-form-item',{attrs:{\"label\":\"攻击提示词模板\",\"prop\":\"prompt\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":10},model:{value:(_vm.attackForm.prompt),callback:function ($$v) {_vm.$set(_vm.attackForm, \"prompt\", $$v)},expression:\"attackForm.prompt\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.attackDialogVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveAttackMethod}},[_vm._v(\"确定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.dialogType === 'add' ? '添加防御方法' : '编辑防御方法',\"visible\":_vm.defenseDialogVisible},on:{\"update:visible\":function($event){_vm.defenseDialogVisible=$event}}},[_c('el-form',{ref:\"defenseForm\",attrs:{\"model\":_vm.defenseForm,\"rules\":_vm.defenseRules,\"label-width\":\"130px\"}},[_c('el-form-item',{attrs:{\"label\":\"防御方法名称\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.defenseForm.name),callback:function ($$v) {_vm.$set(_vm.defenseForm, \"name\", $$v)},expression:\"defenseForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"防御方法描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":3},model:{value:(_vm.defenseForm.description),callback:function ($$v) {_vm.$set(_vm.defenseForm, \"description\", $$v)},expression:\"defenseForm.description\"}})],1),_c('el-form-item',{attrs:{\"label\":\"防御提示词模板\",\"prop\":\"prompt\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":8},model:{value:(_vm.defenseForm.prompt),callback:function ($$v) {_vm.$set(_vm.defenseForm, \"prompt\", $$v)},expression:\"defenseForm.prompt\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.defenseDialogVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveDefenseMethod}},[_vm._v(\"确定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"manage-container\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"24\">\n          <el-tabs v-model=\"activeTab\" type=\"card\">\n            <el-tab-pane label=\"模型管理\" name=\"models\">\n              <el-card>\n                <div slot=\"header\" class=\"clearfix\">\n                  <span>模型列表</span>\n                  <el-button style=\"float: right;\" type=\"primary\" size=\"small\" @click=\"showAddModelDialog\">添加模型</el-button>\n                </div>\n                <el-table :data=\"models\" style=\"width: 100%\">\n                  <el-table-column prop=\"model_name\" label=\"模型名称\" width=\"240\"></el-table-column>\n                  <el-table-column prop=\"base_url\" label=\"API地址\"></el-table-column>\n                  <el-table-column prop=\"api_key\" label=\"API密钥\" show-overflow-tooltip>\n                    <template slot-scope=\"scope\">\n                      <span>{{ hideApiKey(scope.row.api_key) }}</span>\n                    </template>\n                  </el-table-column>\n                  <el-table-column fixed=\"right\" label=\"操作\" width=\"150\">\n                    <template slot-scope=\"scope\">\n                      <el-button @click=\"editModel(scope.row)\" type=\"text\" size=\"small\">编辑</el-button>\n                      <el-button @click=\"deleteModel(scope.row)\" type=\"text\" size=\"small\" style=\"color: #F56C6C;\">删除</el-button>\n                    </template>\n                  </el-table-column>\n                </el-table>\n              </el-card>\n            </el-tab-pane>\n            \n            <el-tab-pane label=\"攻击方法管理\" name=\"attack\">\n              <el-card>\n                <div slot=\"header\" class=\"clearfix\">\n                  <span>攻击方法列表</span>\n                  <el-button style=\"float: right;\" type=\"primary\" size=\"small\" @click=\"showAddAttackDialog\">添加攻击方法</el-button>\n                </div>\n                <el-table :data=\"attackMethods\" style=\"width: 100%\">\n                  <el-table-column prop=\"id\" label=\"ID\" width=\"100\"></el-table-column>\n                  <el-table-column prop=\"name\" label=\"攻击方法名称\" width=\"180\"></el-table-column>\n                  <el-table-column prop=\"description\" label=\"攻击方法描述\" show-overflow-tooltip width=\"320\">\n                    <template slot-scope=\"scope\">\n                      <span>{{ scope.row.description || '暂无描述' }}</span>\n                    </template>\n                  </el-table-column>\n                  <el-table-column prop=\"prompt\" label=\"攻击提示词模板\" show-overflow-tooltip width=\"300\">\n                    <template slot-scope=\"scope\">\n                      <el-popover placement=\"top-start\" width=\"400\" trigger=\"hover\">\n                        <div style=\"max-height: 300px; overflow-y: auto;\">{{ scope.row.prompt || '暂无提示词' }}</div>\n                        <div slot=\"reference\" class=\"prompt-preview\">{{ scope.row.prompt ? scope.row.prompt.substring(0, 50) + '...' : '暂无提示词' }}</div>\n                      </el-popover>\n                    </template>\n                  </el-table-column>\n                  <el-table-column fixed=\"right\" label=\"操作\" width=\"150\">\n                    <template slot-scope=\"scope\">\n                      <el-button @click=\"editAttackMethod(scope.row)\" type=\"text\" size=\"small\">编辑</el-button>\n                      <el-button @click=\"deleteAttackMethod(scope.row)\" type=\"text\" size=\"small\" style=\"color: #F56C6C;\">删除</el-button>\n                    </template>\n                  </el-table-column>\n                </el-table>\n              </el-card>\n            </el-tab-pane>\n            \n            <el-tab-pane label=\"防御方法管理\" name=\"defense\">\n              <el-card>\n                <div slot=\"header\" class=\"clearfix\">\n                  <span>防御方法列表</span>\n                  <el-button style=\"float: right;\" type=\"primary\" size=\"small\" @click=\"showAddDefenseDialog\">添加防御方法</el-button>\n                </div>\n                <el-table :data=\"defenseMethods\" style=\"width: 100%\">\n                  <el-table-column prop=\"id\" label=\"ID\" width=\"100\"></el-table-column>\n                  <el-table-column prop=\"name\" label=\"防御方法名称\" width=\"180\"></el-table-column>\n                  <el-table-column prop=\"description\" label=\"防御方法描述\" show-overflow-tooltip>\n                    <template slot-scope=\"scope\">\n                      <span>{{ scope.row.description || '暂无描述' }}</span>\n                    </template>\n                  </el-table-column>\n                  <el-table-column prop=\"prompt\" label=\"防御提示词模板\" show-overflow-tooltip>\n                    <template slot-scope=\"scope\">\n                      <el-popover\n                        placement=\"top-start\"\n                        width=\"400\"\n                        trigger=\"hover\">\n                        <div style=\"max-height: 300px; overflow-y: auto;\">{{ scope.row.prompt || '暂无提示词' }}</div>\n                        <div slot=\"reference\" class=\"prompt-preview\">{{ scope.row.prompt ? scope.row.prompt.substring(0, 50) + '...' : '暂无提示词' }}</div>\n                      </el-popover>\n                    </template>\n                  </el-table-column>\n                  <el-table-column fixed=\"right\" label=\"操作\" width=\"150\">\n                    <template slot-scope=\"scope\">\n                      <el-button @click=\"editDefenseMethod(scope.row)\" type=\"text\" size=\"small\">编辑</el-button>\n                      <el-button @click=\"deleteDefenseMethod(scope.row)\" type=\"text\" size=\"small\" style=\"color: #F56C6C;\">删除</el-button>\n                    </template>\n                  </el-table-column>\n                </el-table>\n              </el-card>\n            </el-tab-pane>\n          </el-tabs>\n        </el-col>\n      </el-row>\n      \n      <!-- 模型对话框 -->\n      <el-dialog :title=\"dialogType === 'add' ? '添加模型' : '编辑模型'\" :visible.sync=\"modelDialogVisible\">\n        <el-form :model=\"modelForm\" :rules=\"modelRules\" ref=\"modelForm\" label-width=\"100px\">\n          <el-form-item label=\"模型名称\" prop=\"model_name\">\n            <el-input v-model=\"modelForm.model_name\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"API地址\" prop=\"base_url\">\n            <el-input v-model=\"modelForm.base_url\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"API密钥\" prop=\"api_key\">\n            <el-input v-model=\"modelForm.api_key\" type=\"password\" show-password></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"modelDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveModel\">确定</el-button>\n        </div>\n      </el-dialog>\n      \n      <!-- 攻击方法对话框 -->\n      <el-dialog :title=\"dialogType === 'add' ? '添加攻击方法' : '编辑攻击方法'\" :visible.sync=\"attackDialogVisible\">\n        <el-form :model=\"attackForm\" :rules=\"attackRules\" ref=\"attackForm\" label-width=\"130px\">\n          <el-form-item label=\"攻击方法名称\" prop=\"name\">\n            <el-input v-model=\"attackForm.name\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"攻击方法描述\" prop=\"description\">\n            <el-input type=\"textarea\" v-model=\"attackForm.description\" :rows=\"3\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"攻击提示词模板\" prop=\"prompt\">\n            <el-input type=\"textarea\" v-model=\"attackForm.prompt\" :rows=\"10\"></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"attackDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveAttackMethod\">确定</el-button>\n        </div>\n      </el-dialog>\n      \n      <!-- 防御方法对话框 -->\n      <el-dialog :title=\"dialogType === 'add' ? '添加防御方法' : '编辑防御方法'\" :visible.sync=\"defenseDialogVisible\">\n        <el-form :model=\"defenseForm\" :rules=\"defenseRules\" ref=\"defenseForm\" label-width=\"130px\">\n          <el-form-item label=\"防御方法名称\" prop=\"name\">\n            <el-input v-model=\"defenseForm.name\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"防御方法描述\" prop=\"description\">\n            <el-input type=\"textarea\" v-model=\"defenseForm.description\" :rows=\"3\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"防御提示词模板\" prop=\"prompt\">\n            <el-input type=\"textarea\" v-model=\"defenseForm.prompt\" :rows=\"8\"></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"defenseDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveDefenseMethod\">确定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n  </template>\n  \n  <script>\n  import api from '../api/index';\n  import axios from 'axios';\n  \n  export default {\n    name: 'Manage',\n    data() {\n      return {\n        activeTab: 'models',\n        models: [],\n        attackMethods: [],\n        defenseMethods: [],\n        \n        dialogType: 'add', // 'add' 或 'edit'\n\n        oldAttackMethodName: '',\n        oldDefenseMethodName: '',\n\n        // 模型表单\n        modelDialogVisible: false,\n        modelForm: {\n          model_name: '',\n          base_url: '',\n          api_key: ''\n        },\n        modelRules: {\n          model_name: [\n            { required: true, message: '请输入模型名称', trigger: 'blur' }\n          ],\n          base_url: [\n            { required: true, message: '请输入API地址', trigger: 'blur' }\n          ],\n          api_key: [\n            { required: true, message: '请输入API密钥', trigger: 'blur' }\n          ]\n        },\n        \n        // 攻击方法表单\n        attackDialogVisible: false,\n        attackForm: {\n          name: '',\n          description: '',\n          prompt: ''\n        },\n        attackRules: {\n          name: [\n            { required: true, message: '请输入攻击方法名称', trigger: 'blur' }\n          ],\n          prompt: [\n            { required: true, message: '请输入攻击提示词模板', trigger: 'blur' }\n          ]\n        },\n        \n        // 防御方法表单\n        defenseDialogVisible: false,\n        defenseForm: {\n          name: '',\n          description: '',\n          prompt: ''\n        },\n        defenseRules: {\n          name: [\n            { required: true, message: '请输入方法名称', trigger: 'blur' }\n          ],\n          prompt: [\n            { required: true, message: '请输入防御提示词', trigger: 'blur' }\n          ]\n        }\n      };\n    },\n    created() {\n      this.fetchModels();\n      this.fetchAttackMethods();\n      this.fetchDefenseMethods();\n    },\n    methods: {\n      // 模型管理方法\n      fetchModels() {\n        this.$store.dispatch('fetchModels')\n          .then(models => {\n            this.models = models;\n          })\n          .catch(error => {\n            console.error('获取模型列表失败:', error);\n            this.$message.error('获取模型列表失败');\n          });\n      },\n      hideApiKey(key) {\n        if (!key) return '';\n        if (key.length <= 8) {\n          return '*'.repeat(key.length);\n        }\n        return key.substring(0, 4) + '*'.repeat(key.length - 8) + key.substring(key.length - 4);\n      },\n      showAddModelDialog() {\n        this.dialogType = 'add';\n        this.modelForm = {\n          model_name: '',\n          base_url: '',\n          api_key: ''\n        };\n        this.modelDialogVisible = true;\n      },\n      editModel(model) {\n        this.dialogType = 'edit';\n        this.modelForm = {\n          model_name: model.model_name,\n          base_url: model.base_url,\n          api_key: model.api_key\n        };\n        this.modelDialogVisible = true;\n      },\n      saveModel() {\n        this.$refs.modelForm.validate(valid => {\n          if (valid) {\n            // 在实际应用中，这里应该调用API保存模型信息\n            this.$message.success(`${this.dialogType === 'add' ? '添加' : '更新'}模型成功`);\n            this.modelDialogVisible = false;\n\n            // 模拟添加/更新\n            if (this.dialogType === 'add') {\n              this.models.push({...this.modelForm});\n            } else {\n              const index = this.models.findIndex(m => m.model_name === this.modelForm.model_name);\n              if (index !== -1) {\n                this.models.splice(index, 1, {...this.modelForm});\n              }\n            }\n          }\n        });\n      },\n      deleteModel(model) {\n        this.$confirm(`确定要删除模型 \"${model.model_name}\" 吗?`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          // 在实际应用中，这里应该调用API删除模型\n          const index = this.models.findIndex(m => m.model_name === model.model_name);\n          if (index !== -1) {\n            this.models.splice(index, 1);\n          }\n          this.$message.success('删除模型成功');\n        }).catch(() => {});\n      },\n\n   // 攻击方法管理\nfetchAttackMethods() {\n  this.$store.dispatch('fetchAttackMethods')\n    .then(methods => {\n      this.attackMethods = methods;\n    })\n    .catch(error => {\n      console.error('获取攻击方法失败:', error);\n      this.$message.error('获取攻击方法列表失败');\n    });\n},\n\n      showAddAttackDialog() {\n        this.dialogType = 'add';\n        this.attackForm = {\n          name: '',\n          description: '',\n          prompt: ''\n        };\n        this.attackDialogVisible = true;\n      },\n      editAttackMethod(method) {\n        this.dialogType = 'edit';\n        this.oldAttackMethodName = method.name;\n        this.attackForm = {\n          name: method.name,\n          description: method.description || '',\n          prompt: method.prompt || '# 此处为示例提示词模板\\ndef attack(prompt):\\n    # 在此实现攻击逻辑\\n    return modified_prompt'\n        };\n        this.attackDialogVisible = true;\n      },\n      saveAttackMethod() {\n        this.$refs.attackForm.validate(valid => {\n          if (valid) {\n            // 构造API需要的参数格式\n            const formData = {\n              attack_method_name: this.attackForm.name,\n              attack_method_prompt: this.attackForm.prompt,\n              attack_method_description: this.attackForm.description\n            };\n            \n            // 如果是编辑，则添加old_attack_method_name字段\n            if (this.dialogType === 'edit') {\n              formData.old_attack_method_name = this.oldAttackMethodName;\n              formData.new_attack_method_name = this.attackForm.name;\n              formData.new_attack_method_prompt = this.attackForm.prompt;\n              formData.new_attack_method_description = this.attackForm.description;\n            }\n            \n            // 根据对话框类型决定调用哪个API\n            const apiCall = this.dialogType === 'add' \n              ? api.attack.addAttackMethod(formData)\n              : api.attack.updateAttackMethod(formData);\n              \n            apiCall\n              .then(response => {\n                this.$message.success(`${this.dialogType === 'add' ? '添加' : '更新'}攻击方法成功`);\n                this.attackDialogVisible = false;\n                this.fetchAttackMethods(); // 重新获取列表\n              })\n              .catch(error => {\n                this.$message.error(`${this.dialogType === 'add' ? '添加' : '更新'}攻击方法失败: ` + (error.response && error.response.data && error.response.data.error || '服务器错误'));\n              });\n          }\n        });\n      },\n      deleteAttackMethod(method) {\n        this.$confirm(`确定要删除攻击方法 \"${method.name}\" 吗?`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          // 调用API删除攻击方法\n          api.attack.deleteAttackMethod({ \n            attack_method_name: method.name \n          })\n          .then(response => {\n            this.$message.success('删除攻击方法成功');\n            this.fetchAttackMethods(); // 重新获取列表\n          })\n          .catch(error => {\n            this.$message.error('删除攻击方法失败: ' + (error.response && error.response.data && error.response.data.error || '服务器错误'));\n          });\n        }).catch(() => {});\n      },\n      \n      // 防御方法管理\n      fetchDefenseMethods() {\n        this.$store.dispatch('fetchDefenseMethods')\n          .then(methods => {\n            this.defenseMethods = methods;\n          })\n          .catch(error => {\n            console.error('获取防御方法失败:', error);\n            this.$message.error('获取防御方法列表失败');\n          });\n      },\n      showAddDefenseDialog() {\n        this.dialogType = 'add';\n        this.defenseForm = {\n          name: '',\n          description: '',\n          prompt: ''\n        };\n        this.defenseDialogVisible = true;\n      },\n      editDefenseMethod(method) {\n        this.dialogType = 'edit';\n        this.oldDefenseMethodName=method.name;\n        this.defenseForm = {\n          name: method.name,\n          description: method.description || '',\n          prompt: method.prompt || ''\n        };\n        this.defenseDialogVisible = true;\n      },\n      saveDefenseMethod() {\n        this.$refs.defenseForm.validate(valid => {\n          if (valid) {\n            // 构造API需要的参数格式\n            const formData = {\n              defense_method_name: this.defenseForm.name,\n              defense_method_prompt: this.defenseForm.prompt,\n              defense_method_description: this.defenseForm.description\n            };\n            \n            // 如果是编辑，则添加old_defense_method_name字段\n            if (this.dialogType === 'edit') {\n              formData.old_defense_method_name = this.oldDefenseMethodName;\n              formData.new_defense_method_name = this.defenseForm.name;\n              formData.new_defense_method_prompt = this.defenseForm.prompt;\n              formData.new_defense_method_description = this.defenseForm.description;\n            }\n            \n            // 根据对话框类型决定调用哪个API\n            const apiCall = this.dialogType === 'add' \n              ? api.defense.addDefenseMethod(formData)\n              : api.defense.updateDefenseMethod(formData);\n              \n            apiCall\n              .then(response => {\n                this.$message.success(`${this.dialogType === 'add' ? '添加' : '更新'}防御方法成功`);\n                this.defenseDialogVisible = false;\n                this.fetchDefenseMethods(); // 重新获取列表\n              })\n              .catch(error => {\n                this.$message.error(`${this.dialogType === 'add' ? '添加' : '更新'}防御方法失败: ` + (error.response && error.response.data && error.response.data.error || '服务器错误'));\n              });\n          }\n        });\n      },\n      deleteDefenseMethod(method) {\n        this.$confirm(`确定要删除防御方法 \"${method.name}\" 吗?`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          // 调用API删除防御方法\n          api.defense.deleteDefenseMethod({ \n            defense_method_name: method.name \n          })\n          .then(response => {\n            this.$message.success('删除防御方法成功');\n            this.fetchDefenseMethods(); // 重新获取列表\n          })\n          .catch(error => {\n            this.$message.error('删除防御方法失败: ' + (error.response && error.response.data && error.response.data.error || '服务器错误'));\n          });\n        }).catch(() => {});\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .manage-container {\n    padding: 20px;\n  }\n  \n  .prompt-preview {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    cursor: pointer;\n  }\n  </style> ","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=259a0be3&scoped=true\"\nimport script from \"./Manage.vue?vue&type=script&lang=js\"\nexport * from \"./Manage.vue?vue&type=script&lang=js\"\nimport style0 from \"./Manage.vue?vue&type=style&index=0&id=259a0be3&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"259a0be3\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}